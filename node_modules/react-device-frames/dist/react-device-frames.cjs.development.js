'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var IPhoneX = function IPhoneX(_ref) {
  var screenshot = _ref.screenshot,
      props = _objectWithoutPropertiesLoose(_ref, ["screenshot"]);

  return React.createElement("svg", Object.assign({
    width: '100%',
    height: '100%',
    viewBox: '0 0 1305 2598',
    fill: "none"
  }, props), React.createElement("g", {
    filter: "url(#IPhoneX__filter0_ii)"
  }, React.createElement("path", {
    d: "M0 541a4 4 0 014-4h10v190H4a4 4 0 01-4-4V541z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter1_ii)"
  }, React.createElement("path", {
    d: "M0 779a4 4 0 014-4h10v190H4a4 4 0 01-4-4V779z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter2_ii)"
  }, React.createElement("path", {
    d: "M0 355a4 4 0 014-4h10v104H4a4 4 0 01-4-4v-96z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter3_ii)"
  }, React.createElement("path", {
    d: "M1291 597h9c2.76 0 5 2.239 5 5v300c0 2.761-2.24 5-5 5h-9V597z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter4_ii)"
  }, React.createElement("path", {
    d: "M10 200C10 89.543 99.545 0 210.01 0h884.98C1205.45 0 1295 89.547 1295 200v2198c0 110.46-89.55 200-200.01 200H210.01C99.547 2598 10 2508.45 10 2398V200z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter5_ii)"
  }, React.createElement("path", {
    d: "M32 202.005C32 102.591 112.589 22 211.996 22H1093c99.41 0 180 80.588 180 180.005V2395.99c0 99.42-80.59 180.01-180 180.01H211.996C112.587 2576 32 2495.41 32 2395.99V202.005z",
    fill: "#030303"
  }), React.createElement("path", {
    d: "M32 202.005C32 102.591 112.589 22 211.996 22H1093c99.41 0 180 80.588 180 180.005V2395.99c0 99.42-80.59 180.01-180 180.01H211.996C112.587 2576 32 2495.41 32 2395.99V202.005z",
    fill: "url(#IPhoneX__paint0_linear)"
  })), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M1273 250h22v20h-22v-20zM10 250h22v20H10v-20zM1273 2330h22v20h-22v-20zM10 2330h22v20H10v-20z",
    fill: "#303030"
  }), React.createElement("g", {
    filter: "url(#IPhoneX__filter6_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M520 120c6.627 0 12-5.373 12-12s-5.373-12-12-12-12 5.373-12 12 5.373 12 12 12z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter7_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M520 116a8 8 0 100-16 8 8 0 000 16z",
    fill: "#0E0E0E"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter8_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M798 128c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter9_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M798 124c8.837 0 16-7.163 16-16s-7.163-16-16-16-16 7.163-16 16 7.163 16 16 16z",
    fill: "#0E0E0E"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter10_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M586 100h134a8 8 0 010 16H586a8 8 0 010-16z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#IPhoneX__filter11_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M586 104h134a4 4 0 010 8H586a4 4 0 010-8z",
    fill: "#0E0E0E"
  })), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M321 81v.041c.33-.027.663-.041 1-.041 6.629 0 12 5.376 12 12.008V99c0 39.773 32.282 72 72.104 72h492.792C938.714 171 971 138.765 971 99V81h134c60.75 0 110 49.245 110 110v2216c0 60.75-49.24 110-110 110H199.998C139.248 2517 90 2467.75 90 2407V191c0-60.751 49.245-110 109.998-110H321zm663 .041V81h-13v13.004-.996C971 86.376 976.371 81 983 81c.337 0 .67.014 1 .041z",
    fill: "url(#IPhoneX__pattern0)"
  }), React.createElement("defs", null, React.createElement("filter", {
    id: "IPhoneX__filter7_i",
    x: 512,
    y: 100,
    width: 16,
    height: 17,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter0_ii",
    x: 0,
    y: 537,
    width: 14,
    height: 191,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter2_ii",
    x: 0,
    y: 351,
    width: 14,
    height: 105,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter3_ii",
    x: 1291,
    y: 597,
    width: 14,
    height: 311,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter4_ii",
    x: 10,
    y: 0,
    width: 1285,
    height: 2599,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter5_ii",
    x: 32,
    y: 22,
    width: 1241,
    height: 2555,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 20
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.0654721 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.2 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter6_i",
    x: 508,
    y: 96,
    width: 24,
    height: 25,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter1_ii",
    x: 0,
    y: 775,
    width: 14,
    height: 191,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter8_i",
    x: 778,
    y: 88,
    width: 40,
    height: 41,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter9_i",
    x: 782,
    y: 92,
    width: 32,
    height: 33,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter10_i",
    x: 578,
    y: 100,
    width: 150,
    height: 17,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "IPhoneX__filter11_i",
    x: 582,
    y: 104,
    width: 142,
    height: 9,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("linearGradient", {
    id: "IPhoneX__paint0_linear",
    x1: -588.5,
    y1: 1299,
    x2: 1419.42,
    y2: 2274.66,
    gradientUnits: "userSpaceOnUse"
  }, React.createElement("stop", {
    stopColor: "#fff",
    stopOpacity: 0.048
  }), React.createElement("stop", {
    offset: 1,
    stopOpacity: 0.01
  })), React.createElement("pattern", {
    id: "IPhoneX__pattern0",
    patternContentUnits: "objectBoundingBox",
    width: 1,
    height: 1
  }, React.createElement("use", {
    xlinkHref: "#IPhoneX__image0",
    transform: "scale(.00053 .00025)"
  })), React.createElement("image", {
    id: "IPhoneX__image0",
    width: 1892,
    height: 4096,
    href: screenshot
  })));
};

var Pixel3XL = function Pixel3XL(_ref) {
  var screenshot = _ref.screenshot,
      props = _objectWithoutPropertiesLoose(_ref, ["screenshot"]);

  return React.createElement("svg", Object.assign({
    width: '100%',
    height: '100%',
    viewBox: '0 0 792 1628',
    fill: "none"
  }, props), React.createElement("g", {
    filter: "url(#Pixel3XL__filter0_ii)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M434 1628c0-1.1-.895-2-2-2h-78c-1.105 0-2 .9-2 2H86c-47.496 0-86-38.5-86-86V86C0 38.504 38.504 0 86 0h614c47.496 0 86 38.504 86 86v1456c0 47.5-38.504 86-86 86H434z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter1_ii)",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }, React.createElement("path", {
    d: "M86 8h614c43.078 0 78 34.922 78 78v1456c0 43.08-34.922 78-78 78H86c-43.078 0-78-34.92-78-78V86C8 42.922 42.922 8 86 8z",
    fill: "#000"
  }), React.createElement("path", {
    d: "M86 8h614c43.078 0 78 34.922 78 78v1456c0 43.08-34.922 78-78 78H86c-43.078 0-78-34.92-78-78V86C8 42.922 42.922 8 86 8z",
    fill: "url(#Pixel3XL__paint0_linear)"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter2_ii)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M786 377h1a5 5 0 015 5v92a5 5 0 01-5 5h-1V377z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter3_ii)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M786 585h1a5 5 0 015 5v193a5 5 0 01-5 5h-1V585z",
    fill: "#222"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter4_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M358 81h68a9 9 0 019 9 9 9 0 01-9 9h-68a9 9 0 01-9-9 9 9 0 019-9z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter5_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M358 85h68a5 5 0 010 10h-68a5 5 0 010-10z",
    fill: "#0E0E0E"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter6_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M310 94c10.493 0 19-8.507 19-19s-8.507-19-19-19-19 8.507-19 19 8.507 19 19 19z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter7_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M310 90c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15-8.284 0-15 6.716-15 15 0 8.284 6.716 15 15 15z",
    fill: "#0E0E0E"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter8_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M477 89c7.732 0 14-6.268 14-14s-6.268-14-14-14-14 6.268-14 14 6.268 14 14 14z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter9_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M477 85c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10z",
    fill: "#0E0E0E"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter10_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M284 1572h218a8 8 0 018 8 8 8 0 01-8 8H284a8 8 0 01-8-8 8 8 0 018-8z",
    fill: "#1A1A1A"
  })), React.createElement("g", {
    filter: "url(#Pixel3XL__filter11_i)"
  }, React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M284 1576h218a4 4 0 110 8H284a4 4 0 110-8z",
    fill: "#0E0E0E"
  })), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M241 34c14.359 0 26 11.64 26 26v10c0 27.614 22.386 50 50 50h155c27.614 0 50-22.386 50-50V60c0-14.36 11.641-26 26-26h146c32.033 0 58 25.968 58 58v1392c0 16.57-13.431 30-30 30H62c-16.569 0-30-13.43-30-30V92c0-32.032 25.968-58 58-58h151z",
    fill: "url(#Pixel3XL__pattern0)"
  }), React.createElement("defs", null, React.createElement("filter", {
    id: "Pixel3XL__filter7_i",
    x: 295,
    y: 60,
    width: 30,
    height: 31,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter0_ii",
    x: 0,
    y: 0,
    width: 786,
    height: 1629,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter2_ii",
    x: 786,
    y: 377,
    width: 6,
    height: 103,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter3_ii",
    x: 786,
    y: 585,
    width: 6,
    height: 204,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter4_i",
    x: 349,
    y: 81,
    width: 86,
    height: 19,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter5_i",
    x: 353,
    y: 85,
    width: 78,
    height: 11,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter6_i",
    x: 291,
    y: 56,
    width: 38,
    height: 39,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter1_ii",
    x: 8,
    y: 8,
    width: 770,
    height: 1613,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 20
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.0654721 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.2 0"
  }), React.createElement("feBlend", {
    in2: "effect1_innerShadow",
    result: "effect2_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter8_i",
    x: 463,
    y: 61,
    width: 28,
    height: 29,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter9_i",
    x: 467,
    y: 65,
    width: 20,
    height: 21,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter10_i",
    x: 276,
    y: 1572,
    width: 234,
    height: 17,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("filter", {
    id: "Pixel3XL__filter11_i",
    x: 280,
    y: 1576,
    width: 226,
    height: 9,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), React.createElement("feOffset", {
    dy: 1
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 1.5
  }), React.createElement("feComposite", {
    in2: "hardAlpha",
    operator: "arithmetic",
    k2: -1,
    k3: 1
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.038553 0"
  }), React.createElement("feBlend", {
    in2: "shape",
    result: "effect1_innerShadow"
  })), React.createElement("linearGradient", {
    id: "Pixel3XL__paint0_linear",
    x1: -377,
    y1: 814,
    x2: 876.902,
    y2: 1412.95,
    gradientUnits: "userSpaceOnUse"
  }, React.createElement("stop", {
    stopColor: "#fff",
    stopOpacity: 0.048
  }), React.createElement("stop", {
    offset: 1,
    stopOpacity: 0.01
  })), React.createElement("pattern", {
    id: "Pixel3XL__pattern0",
    patternContentUnits: "objectBoundingBox",
    width: 1,
    height: 1
  }, React.createElement("use", {
    xlinkHref: "#Pixel3XL__image0",
    transform: "scale(.0007 .00034)"
  })), React.createElement("image", {
    id: "Pixel3XL__image0",
    width: 1440,
    height: 2960,
    xlinkHref: screenshot
  })));
};

var Chrome = function Chrome(_ref) {
  var screenshot = _ref.screenshot,
      props = _objectWithoutPropertiesLoose(_ref, ["screenshot"]);

  return React.createElement("svg", Object.assign({
    width: '100%',
    height: '100%',
    viewBox: '0 0 1202 780',
    fill: "none"
  }, props), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0 79h1202v695c0 3.314-2.69 6-6 6H6a6 6 0 01-6-6V79zM0 42h1202v37H0V42z",
    fill: "#E5E5E5"
  }), React.createElement("path", {
    fill: "#fff",
    d: "M1 42h1200v37H1z"
  }), React.createElement("path", {
    fill: "#E5E5E5",
    d: "M0 78h1202v1H0z"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M111 60c0-7.732 6.268-14 14-14h977c7.73 0 14 6.268 14 14s-6.27 14-14 14H125c-7.732 0-14-6.268-14-14z",
    fill: "#F0F0F0"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M143.176 66V55.705h1.176v4.088h.109c.369-.813 1.142-1.292 2.269-1.292 1.559 0 2.543.998 2.543 2.727V66h-1.175v-4.484c0-1.306-.588-1.956-1.702-1.956-1.32 0-2.044.834-2.044 2.079V66h-1.176zm8.536-9.276h1.176v1.907h1.641v.984h-1.641v4.17c0 .868.328 1.237 1.094 1.237.212 0 .328-.006.547-.027v.991a3.947 3.947 0 01-.691.069c-1.517 0-2.126-.56-2.126-1.97v-4.47h-1.189v-.984h1.189v-1.907zm4.886 0h1.176v1.907h1.64v.984h-1.64v4.17c0 .868.328 1.237 1.094 1.237.211 0 .328-.006.546-.027v.991a3.936 3.936 0 01-.69.069c-1.518 0-2.126-.56-2.126-1.97v-4.47h-1.189v-.984h1.189v-1.907zm7.983 1.777c1.88 0 3.096 1.497 3.096 3.814 0 2.304-1.223 3.815-3.096 3.815-1.053 0-1.901-.458-2.304-1.237h-.109v3.568h-1.176v-9.83h1.121v1.23h.109c.472-.847 1.354-1.36 2.359-1.36zm-.281 6.57c1.354 0 2.161-1.033 2.161-2.756 0-1.722-.807-2.755-2.154-2.755-1.333 0-2.174 1.06-2.174 2.755 0 1.689.841 2.755 2.167 2.755zm4.852-4.423c0-1.224 1.183-2.147 2.748-2.147 1.545 0 2.618.766 2.776 1.976h-1.163c-.157-.588-.731-.978-1.62-.978-.875 0-1.558.444-1.558 1.1 0 .507.41.82 1.278 1.033l1.135.273c1.388.335 2.057.937 2.057 1.996 0 1.32-1.278 2.229-2.953 2.229-1.64 0-2.768-.786-2.898-2.01h1.21c.198.622.786 1.019 1.729 1.019.992 0 1.703-.472 1.703-1.149 0-.506-.383-.847-1.169-1.039l-1.265-.307c-1.381-.335-2.01-.93-2.01-1.996zm8.27 5.42a.896.896 0 01-.889-.888c0-.493.404-.889.889-.889.492 0 .889.397.889.889a.892.892 0 01-.889.888zm0-5.256a.896.896 0 01-.889-.89c0-.491.404-.888.889-.888.492 0 .889.397.889.889a.892.892 0 01-.889.889zm2.917 7.287H179.3l3.623-12.394h1.039L180.339 68.1zm4.462 0h-1.039l3.623-12.394h1.039L184.801 68.1z",
    fill: "#969696"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M123.5 58.5v-1a2.5 2.5 0 115 0v1h.5a1 1 0 011 1v5a1 1 0 01-1 1h-6a1 1 0 01-1-1v-5a1 1 0 011-1h.5zm1 0h3v-1a1.5 1.5 0 00-3 0v1zM1094.81 67l4.56-2.748 4.55 2.748-1.21-5.18 4.03-3.485-5.3-.45-2.07-4.885-2.07 4.885-5.3.45 4.02 3.485-1.21 5.18zm6.84-3.121l-2.28-1.38-2.29 1.38.61-2.6-2.02-1.75 2.66-.226 1.04-2.46 1.04 2.46 2.66.226-2.02 1.75.6 2.6zM1179.5 57a1.499 1.499 0 110-3 1.499 1.499 0 110 3zm0 5a1.499 1.499 0 110-3 1.499 1.499 0 110 3zm0 5a1.499 1.499 0 110-3 1.499 1.499 0 110 3zM89.89 57.11A5.5 5.5 0 1091.125 63h1.584a7 7 0 11-1.76-6.95L93 54v6h-6l2.89-2.89zM17.485 59.69H28.25a.75.75 0 010 1.5H17.56l4.334 4.333a.75.75 0 11-1.06 1.06L15.53 61.28c-.054-.054-.53-.554-.53-.84 0-.27.449-.835.53-.917l5.304-5.303a.75.75 0 011.06 1.06l-4.409 4.41z",
    fill: "#676767"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M58.515 59.69H47.75a.75.75 0 000 1.5h10.69l-4.334 4.333a.75.75 0 101.06 1.06l5.304-5.303c.054-.054.53-.554.53-.84 0-.27-.449-.835-.53-.917l-5.304-5.303a.75.75 0 00-1.06 1.06l4.409 4.41z",
    fill: "#BBB"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0 6a6 6 0 016-6h1190c3.31 0 6 2.686 6 6v36H0V6z",
    fill: "#E5E5E5"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M326 42H70a8 8 0 008-8V16a8 8 0 018-8h224a8 8 0 018 8v18a8 8 0 008 8z",
    fill: "#fff"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M301 23.822l2.357-2.357a.834.834 0 011.179 1.178L302.179 25l2.357 2.357a.834.834 0 01-1.179 1.178L301 26.178l-2.357 2.357a.834.834 0 01-1.179-1.178L299.822 25l-2.358-2.357a.834.834 0 011.179-1.178L301 23.822z",
    fill: "#676767"
  }), React.createElement("rect", {
    x: 90,
    y: 17,
    width: 16,
    height: 16,
    rx: 2,
    fill: "#E5E5E5"
  }), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M341 24h4a1 1 0 010 2h-4v4a1 1 0 01-2 0v-4h-4a1 1 0 010-2h4v-4a1 1 0 012 0v4z",
    fill: "#676767"
  }), React.createElement("path", {
    d: "M24.5 21a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zM44.5 21a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zM64.5 21a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0z",
    fill: "#D4D4D4",
    stroke: "#CECECE"
  }), React.createElement("path", {
    d: "M1 79h1200v695c0 2.761-2.24 5-5 5H6a5 5 0 01-5-5V79z",
    fill: "url(#Chrome__pattern2)"
  }), React.createElement("defs", null, React.createElement("pattern", {
    id: "Chrome__pattern2",
    patternContentUnits: "objectBoundingBox",
    width: 1,
    height: 1
  }, React.createElement("use", {
    xlinkHref: "#Chrome__image2",
    transform: "scale(.00042 .00071)"
  })), React.createElement("image", {
    id: "Chrome__image2",
    width: 2400,
    height: 1400,
    xlinkHref: screenshot
  })));
};

exports.Chrome = Chrome;
exports.IPhoneX = IPhoneX;
exports.Pixel3XL = Pixel3XL;
//# sourceMappingURL=react-device-frames.cjs.development.js.map
